When would you want to use a remote repository rather than keeping all your work local?
1) When we would like to share our work 
2) If the project requires collaboration with others

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
1) Things on remote repository might be something that you would like to share or collaborate working on with someone. However you may NOT
want to share or collaborate on what you might be working on locally yet. Hence you want it to manually update rather than automatically.

Describe the differences between forks, clones, and branches. When would you use one instead of another?
1) Forks: Copy of a publicly accessible repository into your own Github account as a remote repository
2) Clones: Copy of a publicly accessible repository onto your local machine. Also copy of a local repository onto your local machine
3) Branches: Branches are confined to be within a repository. They are a copy of a commit intended for experimental purpose or adding new
features to a project. Its for trying things out before merging into the master branch to become the official version.

What is the benefit of having a copy of the last known state of the remote stored locally?
The benefit is when the local machine is not connected to the Internet, you can work with the last known state of the remote and later on
when connected can update your work with any updates on the remote

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
1) Try to use Google drive with a way to keep log by tracking changes including details about the author, time-stamp, etc. Like a manual version control
2) Easier:  An internet communication will not be required
			Since it is difficult to break the project most likely assing the job to just one guy. 
			Hence easy to contact just one guy and follow up. Scape goat count remains = 1
			Hence no problems merging! Yay!
   Harder:  Have difficulty in keeping track of changes and related details
			Inability to improve efficiency since it gets risky to break down the project and be assigned to multiple people
			Difficulties in terms of collaborating and recording changes
			Difficulties in capturing the state of the files when changes were made by a person
			Mind-blowing problems when trying to assign parts of the project to multiple people and trying to merge all the work together
			